---

- id: com.lightningkite.rx.android.subscribeAutoDispose
  type: call
  arguments: ["*"]
  template:
    pattern: ~this~.subscribeAutoDispose(~0~)
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.subscribeAutoDispose
  type: call
  template:
    pattern: ~this~.subscribeAutoDispose(~0~, ~1~)
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.subscribeAutoDisposeNullable
  type: call
  template:
    pattern: ~this~.subscribeAutoDispose(~0~, ~1~)
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.into
  type: call
  arguments: ["*"]
  template:
    pattern: ~this~.subscribeAutoDispose(~0~)
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.into
  type: call
  template:
    pattern: ~this~.subscribeAutoDispose(~0~, ~1~)
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.intoNullable
  type: call
  template:
    pattern: ~this~.subscribeAutoDispose(~0~, ~1~)
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.onClickNullable
  type: call
  template:
    pattern: '~this~.onClick(~0~, action: ~2~)'
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.onLongClickNullable
  type: call
  template:
    pattern: '~this~.onLongClick(~0~, action: ~2~)'
    imports: [RxSwiftPlus]

- id: com.jakewharton.rxbinding4.view.clicks
  type: call
  template:
    pattern: '~this~.rx.click'

- id: com.jakewharton.rxbinding4.view.longClicks
  type: call
  template:
    pattern: '~this~.rx.longClick'

- id: com.lightningkite.rx.android.showIn
  type: call
  suppliedArguments: [ recyclerView, getId, makeView ]
  template: "~this~.showIn(~0~, makeView: ~2~)"

- id: com.lightningkite.rx.android.showLoading
  type: get
  reflectiveName: "\\UIView.showLoading"
  template:
    pattern: '~this~.showLoading'
    imports: [RxSwiftPlus]

- id: com.lightningkite.rx.android.showLoading
  type: set
  reflectiveName: "\\UIView.showLoading"
  template:
    pattern: '~this~.showLoading = ~value~'
    imports: [RxSwiftPlus]

- id: com.jakewharton.rxbinding4.widget.editorActionEvents
  type: call
  template:
    pattern: 'Observable<Void>.never()' # TODO
    imports: [RxSwift]

- id: com.jakewharton.rxbinding4.widget.TextViewEditorActionEvent
  type: type
  template: 'Void'

- id: androidx.core.view.isVisible
  type: get
  reflectiveName:
    pattern: '\UIView.exists'
    imports: [UIKit, RxSwiftPlus]
  template:
    pattern: ~this~.exists
    imports: [UIKit, RxSwiftPlus]

- id: androidx.core.view.isVisible
  type: set
  template:
    pattern: ~this~.exists = ~value~
    imports: [UIKit, RxSwiftPlus]
