
- type: "type"
  id: "com.lightningkite.rx.android.resources.ViewString"
  template: "string"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewString.get"
  template: "~this~"

- type: "type"
  id: "com.lightningkite.rx.android.resources.ViewStringRaw"
  template: "string"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewStringRaw"
  template: "~string~"

- type: "get"
  id: "com.lightningkite.rx.android.resources.ViewStringRaw.string"
  template: "~this~"

- type: "type"
  id: "com.lightningkite.rx.android.resources.ViewStringResource"
  template: "string"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewStringResource"
  template: "~resource~"

- type: "get"
  id: "com.lightningkite.rx.android.resources.ViewStringResource.resource"
  template: "~this~"

- type: "type"
  id: "com.lightningkite.rx.android.resources.ViewStringTemplate"
  template: "string"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewStringTemplate"
  template:
    pattern: vsprintf(~0~, ~arguments~)
    imports:
      vsprintf: sprintf-js

- type: "type"
  id: "com.lightningkite.rx.android.resources.ViewStringComplex"
  template: "string"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewStringComplex"
  template: "(~getter~)()"

- type: "type"
  id: "com.lightningkite.rx.android.resources.ViewStringList"
  template: "string"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewStringList"
  template: "~parts~.join(~separator~)"

- type: "call"
  id: "com.lightningkite.rx.android.resources.joinToViewString"
  receiver: "kotlin.collections.List"
  suppliedArguments: [separator]
  template: "~parts~.join(~separator~)"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewStringList"
  suppliedArguments: [separator]
  template: "~parts~.join(', ')"

- type: "call"
  id: "com.lightningkite.rx.android.resources.joinToViewString"
  receiver: "kotlin.collections.List"
  template: "~this~.join(', ')"

- type: "call"
  id: "com.lightningkite.rx.android.resources.toDebugString"
  receiver: "com.lightningkite.rx.android.resources.ViewString"
  template: "~this~"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ViewString.get"
  template: "~this~"

- type: "call"
  id: "com.lightningkite.rx.viewgenerators.get"
  receiver: "com.lightningkite.rx.android.resources.ViewString"
  template: "~this~"

- type: call
  id: com.lightningkite.rx.android.resources.setText
  reflectiveName: '"innerText"'
  template: '~this~.innerText = ~0~'

- type: call
  id: com.lightningkite.rx.android.resources.setText
  actualReceiver: CompoundButton
  reflectiveName:
    pattern: 'chain("label", "innerText")'
    imports:
      chain: '@lightningkite/rxjs-plus'
  template: '~this~.label.innerText = ~0~'

- type: call
  id: com.lightningkite.rx.viewgenerators.getColor
  template: ~0~

- type: call
  id: com.lightningkite.rx.viewgenerators.getString
  template: ~0~

- id: com.lightningkite.rx.android.StringResource
  type: type
  template: 'string'

- id: com.lightningkite.rx.android.ColorResource
  type: type
  template: 'string'

- id: com.lightningkite.rx.android.DrawableResource
  type: type
  template: 'string'

- type: "call"
  id: "com.lightningkite.rx.android.resources.asImage"
  receiver: "kotlin.String"
  template: "{ url: ~this~ }"

- type: "call"
  id: "com.lightningkite.rx.android.resources.asImage"
  receiver: "android.net.Uri"
  template: "{ uri: ~this~ }"

- type: "call"
  id: "com.lightningkite.rx.android.resources.asImage"
  receiver: "android.graphics.Bitmap"
  template: "{ bitmap: ~this~ }"

- type: "call"
  id: "com.lightningkite.rx.android.resources.asImage"
  receiver: "kotlin.Int"
  template: "~this~"


- type: "call"
  id: "com.lightningkite.rx.android.resources.ImageReference"
  template: "{ uri: ~0~ }"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ImageImageBitmap"
  template: "{ bitmap: ~0~ }"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ImageRaw"
  template: "{ raw: ~0~ }"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ImageRemoteUrl"
  template: "{ url: ~0~ }"

- type: "call"
  id: "com.lightningkite.rx.android.resources.ImageResource"
  template: "~0~"


- type: call
  id: com.lightningkite.rx.android.resources.VideoReference
  template: "{ uri: ~0~ }"
- type: call
  id: com.lightningkite.rx.android.resources.VideoRemoteUrl
  template: "{ url: ~0~ }"
- type: call
  id: com.lightningkite.rx.android.resources.asVideo
  receiver: Uri
  template: "{ uri: ~0~ }"
- type: call
  id: com.lightningkite.rx.android.resources.asVideo
  receiver: String
  template: "{ url: ~0~ }"

- type: call
  id: com.lightningkite.rx.android.resources.setImage
  reflectiveName:
    pattern: 'imageElementSet'
    imports:
      imageElementSet: '@lightningkite/rxjs-plus'
  template:
    pattern: 'imageElementSet(~this~, ~0~)'
    imports:
      imageElementSet: '@lightningkite/rxjs-plus'

- type: call
  id: com.lightningkite.rx.android.resources.setImage
  actualReceiver: ImageButton
  reflectiveName:
    pattern: 'chain("image", imageElementSet)'
    imports:
      chain: '@lightningkite/rxjs-plus'
      imageElementSet: '@lightningkite/rxjs-plus'
  template:
    pattern: 'imageElementSet(~this~.image, ~0~)'
    imports:
      imageElementSet: '@lightningkite/rxjs-plus'

- type: call
  id: com.lightningkite.rx.android.resources.load
  template:
    pattern: 'imageToBitmap(~this~)'
    imports:
      imageToBitmap: '@lightningkite/rxjs-plus'

- type: call
  id: com.lightningkite.rx.android.resources.setVideo
  reflectiveName:
    pattern: 'videoElementSet'
    imports:
      videoElementSet: '@lightningkite/rxjs-plus'
  template:
    pattern: 'videoElementSet(~this~, ~0~)'
    imports:
      videoElementSet: '@lightningkite/rxjs-plus'